"""
Django settings for Project_1 project.

Generated by 'django-admin startproject' using Django 4.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os,sys
import time
from django.core.exceptions import FieldDoesNotExist

from drf_yasg.openapi import logger
from rest_framework.schemas import AutoSchema
from rest_framework.templatetags import rest_framework



# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-^zq3f^23(r3l&%rnay3(siq#oftm-br#@idbjo!fym60-2kd5%'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


sys.path.insert(0,os.path.join(BASE_DIR, 'apps'))

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'drf_yasg',
    'corsheaders',
    'emp_manage',
    'django_1',
    'REST_Framework',
    'coreAPI',


]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CORS_ORIGIN_WHITELIST = (
    'http://127.0.0.1:8080',
    'http://localhost:8080',

)
CORS_ALLOW_CREDENTIALS = True

ROOT_URLCONF = 'Project_1.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Project_1.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'backend_1',
        'USER': 'root',
        'PASSWORD': 'root',
        'HOST': '127.0.0.1',
        'PORT': '3306',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# 配置  Redis  database

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/0",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",

        }
    },
    "session": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }

}
# SESSION 使用的存储方式

SESSION_ENGINE = "django.contrib.sessions" \
                 ".backends.cache"
# 指明使用哪一个库存保存 session 数据

SESSION_CACHE_ALIAS = "session"

# 配置项目日志


# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'formatters': {
#         'verbose': {
#             'format': '%(levelname)s %(asctime)s %(module)s %(lineno)d %(message)s',
#             'extra': '%(extra)s',  # Include the 'extra' parameter in the format string
#         },
#         'simple': {
#             'format': '%(levelname)s %(module)s %(lineno)d %(message)s',
#             'extra': '%(extra)s',  # Include the 'extra' parameter in the format string
#         },
#     },
#     'filters': {
#         'require_debug_true': {
#             '()': 'django.utils.log.RequireDebugTrue',
#         },
#     },
#     'handlers': {
#         'console': {
#             'level': 'INFO',
#             'filters': ['require_debug_true'],
#             'class': 'logging.StreamHandler',
#             'formatter': 'simple'
#         },
#         'file': {
#             'level': 'INFO',
#             'class': 'logging.handlers.TimedRotatingFileHandler',
#             'filename': os.path.join(os.path.dirname(BASE_DIR), 'Project_1/logs/project_1.log'),
#             'when': 'D',
#             'interval': 1,
#             'backupCount': 30,
#             'formatter': 'verbose'
#         },
#     },
#     'loggers': {
#         'django': {
#             'handlers': ['console', 'file'],
#             'level': 'INFO',
#         },
#     }
# }


# JWT_AUTH = {
#     'JWT_EXPIRATION_DELTA': int(time.time()+3600*24),
#     'JWT_REFRESH_EXPIRATION': int(time.time()+3600*24),
#     'JWT_KEY': '1ssdfsdt45yjnfhf',
# }

#
# SWAGGER_SETTINGS = {
#     'DEFAULT_FIELD_INSPECTORS': [
#         'drf_yasg.inspectors.CamelCaseJSONFilter',
#         'drf_yasg.inspectors.InlineSerializerInspector',
#         'drf_yasg.inspectors.RelatedFieldInspector',
#         'drf_yasg.inspectors.ChoiceFieldInspector',
#         'drf_yasg.inspectors.FileFieldInspector',
#         'drf_yasg.inspectors.DictFieldInspector',
#         'drf_yasg.inspectors.SimpleFieldInspector',
#         'drf_yasg.inspectors.StringDefaultFieldInspector',
#     ],
# }

REST_FRAMEWORK = {
    'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.coreapi.AutoSchema',




}

# 'DEFAULT_THROTTLE_RATES':{
#     'anon':'100/day',
#     'user':'1000/day'
# }


# rest_framework.schemas


# DEFAULT_AUTHENTICATION_CLASSES
# REST_FRAMEWORK = {
#     'DEFAULT_AUTHENTICATION_CLASSES': [
#         'rest_framework_jwt.authentication.JSONWebTokenAuthentication'
#         'rest_framework.authentication.BasicAuthentication',
#         'rest_framework.authentication.SessionAuthentication',
#     ]
# }
#
# 'DEFAULT_AUTHENTICATION_CLASSES': (
#         'rest_framework.permissions.AllowAny',


#     'rest_framework_jwt.authentication.JSONWebTokenAuthentication',),