# Generated by Django 4.2.3 on 2023-07-04 10:45

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('coreAPI', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserloginModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=20, unique=True, verbose_name='username1')),
                ('email', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='email1')),
                ('password', models.CharField(max_length=30, verbose_name='pass1')),
                ('phone', models.IntegerField(verbose_name='phone_num')),
                ('groups', models.ManyToManyField(related_name='userlogins', to='auth.group')),
                ('user_permissions', models.ManyToManyField(related_name='userlogins', to='auth.permission')),
            ],
            options={
                'verbose_name': 'User_table',
                'verbose_name_plural': 'User_table',
                'db_table': 't_userlogin',
                'ordering': ['id'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
